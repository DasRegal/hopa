#!/bin/bash

HOPA_VERSION=1.0V

RUNIT_SCRIPT_PATH=$0
EXE_FILE=$(echo $RUNIT_SCRIPT_PATH)_exe
RUNIT_C=$(echo $RUNIT_SCRIPT_PATH).c
PRJ_PATH="$(pwd)"
INC_FILE_NAME="$(pwd)/includes"
SPEC_DIR="$PRJ_PATH/spec"

function print_usage {
    echo "Usage: hopa [options]"
    echo "type: 'hopa --help' for more"
}

function print_version {
    echo "Hopa Test framework $HOPA_VERSION"
}

function print_help {
    echo "Usage: hopa [options]"
    echo "available options:"
    echo "  -h, --help"
    echo "      prints this page"
    echo "  -v, --verbose"
    echo "      be verbose"
    echo "  -V, --version"
    echo "      print program version"
    echo "  init"
    echo "      initialize hopa"
    echo ""
}

function init {
    chmod +x ./hopa/hopa/hopa
    mkdir spec
    if [ $? -ne 0 ]
    then
        exit 1
    else
        echo "make directory spec/"
    fi
}

function update {
    echo "Updating Hopa!..."
    echo
    git -C hopa/ pull origin master
    echo
    echo "done"
}

VERBOSE_MODE=

for key in "$@"
do
case $key in
    --help|-h)
        print_help
        exit 0
        ;;
    --version|-V)
        print_version
        exit 0
        ;;
    --verbose|-v)
        VERBOSE_MODE=1
        ;;
    init)
        init
        exit 0
        ;;
    update)
        update
        exit 0
        ;;
    *)
        INC_FILES="$INC_FILES $key"
        ;;
esac
done

echo "Hopa! $HOPA_VERSION"

if [ ! -d $SPEC_DIR ]
then
    echo
    echo "[Hopa] Error: \`$SPEC_DIR\` directory does not exists."
    echo "Type hopa init"
    exit 1
fi

if [ -f $INC_FILE_NAME ]
then
    rm $INC_FILE_NAME
fi
touch $INC_FILE_NAME

if [ -z "$INC_FILES" ]
then
    INC_FILES=`ls $SPEC_DIR/*`
fi

for eachfile in $INC_FILES
do
    echo "#include \"$eachfile\"" >> $INC_FILE_NAME
    INC_SRC=$(cat $eachfile | grep -Ei 'source\(\".*"\)' | grep -oEi '\".*\"' | grep -oEi '[^"]*' | tr '\n' ' ')
    if [ ! -z "$INC_SRC" ]
    then
        SRC="$SRC $PRJ_PATH/$INC_SRC"
    fi
done

COMPILE_CMD="gcc $RUNIT_C $SRC -o $EXE_FILE -I$PRJ_PATH -DHOPA_NOT_INCLUDE_FOR_TEST"

if [ "$VERBOSE_MODE" ]
then
    echo
    cat $INC_FILE_NAME
    echo
    echo $COMPILE_CMD
    gcc -E $RUNIT_C $SRC -I$PRJ_PATH -DHOPA_NOT_INCLUDE_FOR_TEST > log
    echo
    $COMPILE_CMD
else
    $COMPILE_CMD > /dev/null 2>&1
fi

if [ $? -ne 0 ]
then
    echo
    echo "[Hopa] Error: compile error."
    exit 1
else
    $EXE_FILE
fi

if [ -f $INC_FILE_NAME ]
then
    rm $EXE_FILE
    rm $INC_FILE_NAME
else
    echo
    echo "[Hopa] Error: compile error."
    exit 1
fi
